<Window x:Class="AMEC.PCSoftware.RemoteConsole.CrazyHein.Prometheus.Xandria.Utility.FTPUtility"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AMEC.PCSoftware.RemoteConsole.CrazyHein.Prometheus.Xandria"
        xmlns:sync="http://schemas.syncfusion.com/wpf"
        xmlns:syncfusionskin ="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
        mc:Ignorable="d"
        Title="FTP Utility" Height="550" Width="500" WindowStartupLocation="CenterScreen" Closing="Window_Closing">
    <DockPanel syncfusionskin:SfSkinManager.Theme="{syncfusionskin:SkinManagerExtension ThemeName=FluentLight}"  Margin="8,4,8,4" LastChildFill="True">
        <DockPanel.Resources>
            <local:InvertBooleanValue x:Key="InvertBoolean"/>
            <local:IPv4TextConverter x:Key="IPv4"/>
        </DockPanel.Resources>
        <Grid Margin="0,10,0,0" DockPanel.Dock="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StatusBar Margin="0,4,0,4" Grid.Row="1" Grid.ColumnSpan="2">
                <TextBlock Text="{Binding TransferState}"></TextBlock>
            </StatusBar>
            <Button Height="30" Content="Close" Click="Cancel_Click" Margin="0,0,4,4" IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolean}}">
            </Button>
            <Button Grid.Column="1" Height="30" Content="{Binding Mode}" Click="OK_Click" Margin="4,0,0,4" IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolean}}">
            </Button>
        </Grid>
        <Grid x:Name="InputsGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <sync:SfBusyIndicator Name="BusyIndicator" IsBusy="{Binding IsBusy}" Grid.ColumnSpan="2" Grid.RowSpan="5"/>
            <sync:SfTextInputLayout Hint="Host" HelperText="Input FTP host IPv4 here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8" HasError="{Binding RelativeSource={RelativeSource self}, Path = InputView.(Validation.HasError)}">
                <TextBox Text="{Binding HostIPv4, Converter={StaticResource IPv4}, ValidatesOnExceptions=True, NotifyOnValidationError=True}" FontStyle="Normal"/>
            </sync:SfTextInputLayout>
            <sync:SfTextInputLayout Grid.Column="1" Hint="Port" HelperText="Input FTP host port here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8" HasError="{Binding RelativeSource={RelativeSource self}, Path = InputView.(Validation.HasError)}">
                <TextBox Text="{Binding HostPort, ValidatesOnExceptions=True, NotifyOnValidationError=True}" FontStyle="Normal"/>
            </sync:SfTextInputLayout>
            <sync:SfTextInputLayout Grid.Row="1" Hint="User" HelperText="Input login user name here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8">
                <TextBox Text="{Binding User}" FontStyle="Normal"/>
            </sync:SfTextInputLayout>
            <sync:SfTextInputLayout Grid.Row="1" Grid.Column="1" Hint="Password" HelperText="Input login password here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8">
                <TextBox Text="{Binding Password}" FontStyle="Normal"/>
            </sync:SfTextInputLayout>

            <sync:SfTextInputLayout Grid.Row="2" Hint="Timeout" HelperText="Input timeout value here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8" HasError="{Binding RelativeSource={RelativeSource self}, Path = InputView.(Validation.HasError)}">
                <TextBox Text="{Binding Timeout}" FontStyle="Normal"/>
            </sync:SfTextInputLayout>
            <sync:SfTextInputLayout Grid.Row="2" Grid.Column="1" Hint="Read &amp; Write Timeout" HelperText="Input read/write timeout value here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8" HasError="{Binding RelativeSource={RelativeSource self}, Path = InputView.(Validation.HasError)}">
                <TextBox Text="{Binding ReadWriteTimeout}" FontStyle="Normal"/>
            </sync:SfTextInputLayout>
            
            <sync:SfTextInputLayout Grid.Row="3" Grid.ColumnSpan="2" Hint="Task User Parameters File" HelperText="Input user task parameters file name here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8" HasError="{Binding RelativeSource={RelativeSource self}, Path = InputView.(Validation.HasError)}">
                <TextBox Text="{Binding TaskUserParametersPath, ValidatesOnExceptions=True, NotifyOnValidationError=True}" FontStyle="Normal" IsReadOnly="True"/>
            </sync:SfTextInputLayout>

            <CheckBox Name="ChkboxDownloadOrbment" Content="Download Orbment Runtime Binary" Grid.Row="5" Grid.Column="0" Margin="4,8,4,8"/>
            <sync:SfTextInputLayout Name="TxtInputOrbmentVersion" Grid.Row="5" Grid.Column="1" IsEnabled="{Binding ElementName=ChkboxDownloadOrbment, Path=IsChecked}" Hint="Available Versions"  HelperText="Select Orbment Runtime version here" FontSize="12" FontStyle="Italic" ContainerType="Filled" Margin="4,8,4,8">
                <ComboBox FontStyle="Normal" ItemsSource="{Binding AvailableOrbmentVersions}" SelectedItem="{Binding SelectedOrbmentVersion}" />
            </sync:SfTextInputLayout>
        </Grid>
    </DockPanel>
</Window>
