<UserControl x:Class="AMEC.PCSoftware.RemoteConsole.CrazyHein.Prometheus.Seiren.ProcessDataImageViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AMEC.PCSoftware.RemoteConsole.CrazyHein.Prometheus.Seiren"
             xmlns:sync="http://schemas.syncfusion.com/wpf" d:DataContext="{d:DesignInstance Type=local:ProcessDataImageModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1800">
    <GroupBox Header="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sync:TabItemExt}, Path=Header}" Padding="0,8,0,0">
        <DockPanel>
            <DockPanel.CommandBindings>
                <CommandBinding Command="local:ConsoleControl.AddRecord" Executed="AddRecordCommand_Executed" CanExecute="AddRecordCommand_CanExecute"/>
                <CommandBinding Command="local:ConsoleControl.InsertRecord" Executed="InsertRecordCommand_Executed" CanExecute="InsertRecordCommand_CanExecute"/>
                <CommandBinding Command="local:ConsoleControl.RemoveRecord" Executed="RemoveRecordCommand_Executed" CanExecute="RemoveRecordCommand_CanExecute"/>
            </DockPanel.CommandBindings>
            <DockPanel.Resources>
                <local:InvertBooleanValue x:Key="InvertBoolean"/>
                <local:ProcessDataImageAllowEditing x:Key="AllowEditing"/>
                <DataTemplate x:Key="RecordToolTipTemplate">
                    <TextBlock Text="{Binding VariableComment}"/>
                </DataTemplate>
                <ContextMenu x:Key="GridContextMenu">
                    <MenuItem Command="local:ConsoleControl.InsertRecord">
                        <MenuItem.Icon>
                            <Image Source="/imgs/insert.png" Height="20" Margin="4"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="local:ConsoleControl.RemoveRecord">
                        <MenuItem.Icon>
                            <Image Source="/imgs/remove.png" Height="20" Margin="4"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <DataTemplate x:Key="RecordDragDropTemplate">
                    <Border Padding="4" Background="#ececec" BorderBrush="#c8c8c8" BorderThickness="1.2">
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Index : " Grid.Row="0" Grid.Column="0" FontWeight="Bold"/>
                            <TextBlock Text="{Binding DraggingRecords[0].Index, StringFormat='0x{0:X08}'}" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="Name : " Grid.Row="1" Grid.Column="0" FontWeight="Bold"/>
                            <TextBlock Text="{Binding DraggingRecords[0].VariableName}" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="Data Type : " Grid.Row="2" Grid.Column="0" FontWeight="Bold"/>
                            <TextBlock Text="{Binding DraggingRecords[0].VariableDataType}" Grid.Row="2" Grid.Column="1"/>
                            <TextBlock Text="Unit : " Grid.Row="3" Grid.Column="0" FontWeight="Bold"/>
                            <TextBlock Text="{Binding DraggingRecords[0].VariableUnit}" Grid.Row="3" Grid.Column="1"/>
                            <TextBlock Text="Binding : " Grid.Row="4" Grid.Column="0" FontWeight="Bold"/>
                            <TextBlock Text="{Binding DraggingRecords[0].DeviceBindingInfo}" Grid.Row="4" Grid.Column="1"/>
                            <TextBlock Text="Range : " Grid.Row="5" Grid.Column="0" FontWeight="Bold"/>
                            <TextBlock Text="{Binding DraggingRecords[0].ValueRangeInfo}" Grid.Row="5" Grid.Column="1"/>
                            <TextBlock Text="Converter : " Grid.Row="6" Grid.Column="0" FontWeight="Bold"/>
                            <TextBlock Text="{Binding DraggingRecords[0].ValueConverterInfo}" Grid.Row="6" Grid.Column="1"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </DockPanel.Resources>
            <DockPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" Validation.Error="Input_Error" KeyDown="Input_KeyDown" IsEnabled="{Binding IsOffline}">
                    <sync:SfTextInputLayout Hint="Offset (Words)" HelperText="Input area offset(words) here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8" HasError="{Binding RelativeSource={RelativeSource self}, Path = InputView.(Validation.HasError)}">
                        <TextBox Name="InputOffsetInWord" Text="{Binding OffsetInWord, ValidatesOnExceptions=True, NotifyOnValidationError=True}" FontStyle="Normal"/>
                    </sync:SfTextInputLayout>
                    <sync:SfTextInputLayout Hint="Size (Words)" HelperText="Input area size(words) here" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8" HasError="{Binding RelativeSource={RelativeSource self}, Path = InputView.(Validation.HasError)}">
                        <TextBox Name="InputSizeInWord" Text="{Binding SizeInWord, ValidatesOnExceptions=True, NotifyOnValidationError=True}" FontStyle="Normal"/>
                    </sync:SfTextInputLayout>
                    <sync:SfTextInputLayout Hint="Actual Size (Words)" HelperText="Indicate the area actual size(words)" ContainerType="Filled" FontStyle="Italic" FontSize="12" Margin="4,8,4,8">
                        <TextBox Text="{Binding ActualSizeInWord}" FontStyle="Normal" IsReadOnly="True"/>
                    </sync:SfTextInputLayout>
                </StackPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding DirectModeOperation, Mode=OneWayToSource}" Margin="4" Content="Direct Mode Operation"/>
                    <sync:ButtonAdv Label="Add" VerticalAlignment="Center" Height="30" Width="128" Command="local:ConsoleControl.AddRecord" Margin="4">
                        <sync:ButtonAdv.SmallIcon>
                            <BitmapImage  UriSource="/imgs/add.png"/>
                        </sync:ButtonAdv.SmallIcon>
                    </sync:ButtonAdv>
                    <sync:ButtonAdv Label="Insert" VerticalAlignment="Center" Height="30" Width="128" Command="local:ConsoleControl.InsertRecord" Margin="4">
                        <sync:ButtonAdv.SmallIcon>
                            <BitmapImage  UriSource="/imgs/insert.png"/>
                        </sync:ButtonAdv.SmallIcon>
                    </sync:ButtonAdv>
                    <sync:ButtonAdv Label="Remove" VerticalAlignment="Center" Height="30" Width="128" Command="local:ConsoleControl.RemoveRecord" Margin="4">
                        <sync:ButtonAdv.SmallIcon>
                            <BitmapImage  UriSource="/imgs/remove.png"/>
                        </sync:ButtonAdv.SmallIcon>
                    </sync:ButtonAdv>
                </StackPanel>
            </DockPanel>
            <sync:SfDataGrid Name="ProcessDataImageGrid" ItemsSource="{Binding ProcessDataModels}" AutoGenerateColumns="False"
                             ColumnSizer="AutoLastColumnFill"
                         AllowGrouping="False" AllowFiltering="False" AllowSorting="False" AllowResizingColumns="True"
                         ShowSortNumbers="True" ShowRowHeader="True" 
                         LiveDataUpdateMode="AllowDataShaping" ScrollMode="Async"
                         AllowDrop="True" AllowDraggingRows="True"
                         RecordContextMenu="{StaticResource GridContextMenu}" RowDragDropTemplate="{StaticResource RecordDragDropTemplate}" d:DataContext="{d:DesignInstance Type=local:ProcessDataModel}">
                <sync:SfDataGrid.Resources>
                    <local:HideBooleanValueColumn x:Key="HideBooleanValueColumn"/>
                    <local:HideStringValueColumn x:Key="HideStringValueColumn"/>
                </sync:SfDataGrid.Resources>
                <sync:SfDataGrid.Columns>
                    <sync:GridTextColumn DisplayBinding="{Binding Bit}" HeaderText="Bit" MinimumWidth="60"/>
                    <sync:GridTextColumn DisplayBinding="{Binding Byte}" HeaderText="Byte" MinimumWidth="60"/>
                    <sync:GridTextColumn DisplayBinding="{Binding Index, StringFormat='0x{0:X08}'}" HeaderText="Index"/>
                    <sync:GridTextColumn DisplayBinding="{Binding VariableName}" HeaderText="Name" ToolTipTemplate="{StaticResource RecordToolTipTemplate}" ShowToolTip="True"/>
                    <sync:GridTextColumn DisplayBinding="{Binding VariableDataType}" HeaderText="Data Type"/>
                    <sync:GridTextColumn DisplayBinding="{Binding VariableUnit}" HeaderText="Unit"/>
                    <sync:GridTextColumn DisplayBinding="{Binding DeviceBindingInfo}" HeaderText="Binding"/>
                    <sync:GridTextColumn DisplayBinding="{Binding ValueRangeInfo}" HeaderText="Range"/>
                    <sync:GridTextColumn DisplayBinding="{Binding ValueConverterInfo}" HeaderText="Converter"/>
                    <sync:GridTextColumn DisplayBinding="{Binding DataStringDisplay}" ValueBinding="{Binding DataStringValue}" HeaderText="Value" 
                                         AllowEditing="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.Access, Converter={StaticResource AllowEditing}}" 
                                         >
                        <sync:GridTextColumn.IsHidden>
                            <MultiBinding Converter="{StaticResource HideStringValueColumn}">
                                <Binding Path="DataContext.IsOffline" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                                <Binding Path="DataContext.Layout" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                            </MultiBinding>
                        </sync:GridTextColumn.IsHidden>
                    </sync:GridTextColumn>
                    <sync:GridCheckBoxColumn MappingName="DataBooleanValue" HeaderText="Value" 
                                         AllowEditing="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.Access, Converter={StaticResource AllowEditing}}" 
                                         >
                        <sync:GridCheckBoxColumn.IsHidden>
                            <MultiBinding Converter="{StaticResource HideBooleanValueColumn}">
                                <Binding Path="DataContext.IsOffline" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                                <Binding Path="DataContext.Layout" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                            </MultiBinding>
                        </sync:GridCheckBoxColumn.IsHidden>
                        <!--sync:GridTextColumn.CellStyle>
                            <Style TargetType="sync:GridCell">
                                <Setter Property="IsEnabled" Value="{Binding BooleanValue}" />
                            </Style>
                        </sync:GridTextColumn.CellStyle-->
                    </sync:GridCheckBoxColumn>
                </sync:SfDataGrid.Columns>
            </sync:SfDataGrid>
        </DockPanel>
    </GroupBox>
</UserControl>
